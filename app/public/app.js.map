{"version":3,"sources":["../src/app.js"],"names":["Main","props","state","loading","weather","error","getWeather","then","setState","city","Promise","resolve","reject","http","XMLHttpRequest","open","onloadend","response","data","JSON","parse","daily","onerror","React","Component","ReactDOM","render","document","getElementById"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;IAAMA,I;;;;;AACJ,gBAAaC,KAAb,EAAoB;AAAA;;AAAA;;AAClB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AADE,KAAb;AAGA,UAAKC,OAAL,GAAe,EAAf;AACA,UAAKC,KAAL,GAAa,KAAb;AANkB;AAOnB;;;;WAED,6BAAqB;AAAA;;AACnB,WAAKC,UAAL,GACCC,IADD,CACM,UAACH,OAAD,EAAY;AAChB,QAAA,MAAI,CAACA,OAAL,GAAeA,OAAf;;AACA,QAAA,MAAI,CAACI,QAAL,CAAc;AAACL,UAAAA,OAAO,EAAC;AAAT,SAAd;AACD,OAJD,WAKO,UAACE,KAAD,EAAW;AAChB,QAAA,MAAI,CAACG,QAAL,CAAc;AAACL,UAAAA,OAAO,EAAC;AAAT,SAAd;;AACA,QAAA,MAAI,CAACE,KAAL,GAAa,IAAb;AACD,OARD;AAUD;;;WAED,oBAAYI,IAAZ,EAAkB;AAChB,aAAO,IAAIC,OAAJ,CAAa,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACvC,YAAIR,OAAO,GAAG,EAAd;AACA,YAAIS,IAAI,GAAG,IAAIC,cAAJ,EAAX;AACAD,QAAAA,IAAI,CAACE,IAAL,CAAU,MAAV,EAAkB,YAAYN,IAA9B;AACAI,QAAAA,IAAI,CAACG,SAAL,CAAe,UAACC,QAAD,EAAc;AAC3B,cAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWH,QAAX,CAAX;AACAb,UAAAA,OAAO,GAAGc,IAAI,CAACG,KAAf;AACAV,UAAAA,OAAO,CAACP,OAAD,CAAP;AACD,SAJD;AAKAS,QAAAA,IAAI,CAACS,OAAL,CAAa,UAACjB,KAAD,EAAW;AACtBO,UAAAA,MAAM,CAACP,KAAD,CAAN;AACD,SAFD;AAGD,OAZM,CAAP;AAaD;;;WAED,kBAAU;AACR,0BACE,+CACE,uDADF,EAEI,KAAKH,KAAL,CAAWC,OAAX,GAAqB,YAArB,GAAoC,KAAKC,OAF7C,CADF;AAMD;;;;EA9CgBmB,KAAK,CAACC,S;;AAiDzBC,QAAQ,CAACC,MAAT,eAAgB,oBAAC,IAAD,OAAhB,EAA0BC,QAAQ,CAACC,cAAT,CAAwB,oBAAxB,CAA1B","sourcesContent":["class Main extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      loading: true\n    }\n    this.weather = []\n    this.error = false\n  }\n\n  componentDidMount () {\n    this.getWeather()\n    .then((weather) =>{\n      this.weather = weather\n      this.setState({loading:false})\n    })\n    .catch((error) => {\n      this.setState({loading:false})\n      this.error = true\n    })\n\n  }\n\n  getWeather (city) {\n    return new Promise ((resolve, reject) => {\n      let weather = []\n      let http = new XMLHttpRequest()\n      http.open('POST', '/seven/' + city)\n      http.onloadend((response) => {\n        let data = JSON.parse(response)\n        weather = data.daily\n        resolve(weather)\n      })\n      http.onerror((error) => {\n        reject(error)\n      })\n    }) \n  }\n\n  render () {\n    return (\n      <main>\n        <h1>The Weather Forecast</h1>\n        { this.state.loading ? 'LOADING...' : this.weather}\n      </main>\n    )\n  }\n}\n\nReactDOM.render(<Main />, document.getElementById('incredible-purpose'));\n"],"file":"app.js"}